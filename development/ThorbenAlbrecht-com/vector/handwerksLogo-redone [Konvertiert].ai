%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (getwebbed.org) ()
%%Title: (handwerksLogo-redone [Konvertiert].ai)
%%CreationDate: 2/15/2020 4:42 PM
%%Canvassize: 8640
%%BoundingBox: -277 -269 221 224
%%HiResBoundingBox: -276.5552 -268.4888 220.4448 223.269
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Passermarken])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 15 10 15 10
%AI3_TileBox: -398.0549 -277.1401 421.0649 298.8599
%AI3_DocumentPreview: None
%AI5_ArtSize: 841.8901 595.2803
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -576.5 494.5 1 1190 860 26 0 0 45 111 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 128 8
%%BeginData: 10231 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD3AFFA8A8FFA8A8A8FFA8A8A8FF7DFD74FFA8FD7AFFA8A8A8A9FD
%04A884A8A8A884A8A8A87DA8A8AFA8A8FD6AFFA87DFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA87DA8FD6CFFA8FD10FFA8A8FD5AFFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FD04FFA8A8FD0EFFA8A8FD5AFFFD05A8FFA8A8A8FFA8
%A8A8FFA8A8A8FD04FFAFA8FD0CFFA8A8FD05FFA8A8A8FD53FFA8A8FD0EFF
%A8A8FD04FFA8A8FD0AFFA8A8FD04FFA8A8FFFFFFFD05A8FD4EFFA8FD11FF
%A8FD04FFA8A8FD09FFA8FD04FFAFA8FD07FFA8A8A8FD4EFFA8FD10FFA8A8
%FD04FFA8A8FD07FF7DFD04FFA8A8FD0BFFFD05A8FD48FFA8FD13FFA8FD04
%FFA8A8FD05FFA8FD04FFA8A8FD0FFFA8FFA8A8A8FD46FFA8FD12FFA8A8FD
%04FFA8A8FFFFFF7DFD04FFA8A8FD13FFA8A87DFD44FFA8FD14FFAFA8FD04
%FFA8FFFF7DFD05FFA8FD5CFFA8FD14FFA8A8FFFFFFA8A87DFD04FFA8A8FD
%17FFA8FD44FFA8FD16FFA8A8FFFFFFA8FD05FFA8FD18FFA8A8FD43FFA9A8
%FD16FFA8A8FD06FFA8A8FD19FFA8FD44FFA8FD19FFA8FD05FFA8FD4EFF7D
%A8FD10FFA8FD17FFA8FD05FFA8A8FD1AFFA8FD0DFFA8A8FD23FFA8FFA8FD
%0FFFA8FD17FFA8FD07FFA8A8FD26FFFD04A8FD21FF84A8FFFFA8A8FD0EFF
%A8FD15FF7DFD04FFA8A8FFFFFFA8A8FD18FFA8FD0BFFA8A8FFFFA8A8FD1F
%FFA8A8FD04FFA8FD0DFFA8FD15FFA8FD05FFA8A8A8FFFFFFA8A8FD22FFA8
%AFFD04FFA8A8FD1DFFA8A8FD06FFA8FD0DFFA8FD13FFA8FD05FF7DFFFFA8
%A8FFFFFFA8A8FD16FFA8FD09FFA8A8FD06FFA8A8FD1CFFA8FD08FFA8FD0B
%FFA8FD13FFA8FD05FFA8FD04FFA8A8FFFFFFA8A8FD14FFA8A8FD08FFA8A8
%FD08FFA8FD1AFFA8A8A8FD09FFA8A8FD09FFA9A8FD11FFA8FD05FF7DFD06
%FFA8A8FFFFFFA8A8FD0EFFFD05A8FD09FFA8A8FD0AFF7DFD19FFA8A8FD0B
%FFA8FD09FFA8FD11FFA8FD05FF7DFD08FFA8FD04FFA8A8FD0BFFAFA8A8A8
%FD0BFFA8A8FD0CFFA8FD17FFA8A8FD0DFF7DFD09FFA8FD0FFF84FD05FF7D
%FD09FFA8A8A9FFFFFFA8A8FD06FFFD05A8FD0DFFA8A8FD0DFFA8A8FD16FF
%A8FD0DFFA8A8FD08FFA8FD0FFFA8FD05FF7DFD0BFFA8A8FD04FFA8A8FFFF
%A8A8A8FD13FFA8FD0EFFA8A9FD14FF7DFD0DFFA8A8FD0AFF84FD0DA87DFD
%05FF7DFD0DFFA8A8FD04FFA8A8A8FFA8FD15FF7DFD0DFFA8A8FD13FFA8FD
%0EFFA8FD1EFFA8FD0FFFA8A8FD1EFFA8FD0DFFA8FD13FFA8FD0DFFA8A8FD
%1DFF7DFD11FFA8A8FD1EFF7DFD0DFF7DFD11FFA8A8FD0CFFA8A8FD1DFFA8
%A8A8FFFD0DA8FFA8FFA8A8FD1EFFA8FD0DFFA8FD10FF7DFD0CFFA8A8FD1F
%FFA8A9A8A87DFD0AA884A8FFA8FFA8FD1EFFA8A8FD0CFFA8A8FD0EFFA8FD
%0DFFA8FD2FFFA8FD24FFA8A8FD0CFFA8FD0DFFA8A8FD0CFF7DFD25FFA8FD
%0AFFA8A8FD23FFA9A8FD0CFFA8FD0DFFA8FD0CFFA8A9FD24FFA8FD0BFFA8
%FD25FFA8A8FD0CFFA8FD0CFFA8FD0BFFA8A8FD26FFA8FD0AFFA8A8FD25FF
%7DFD0CFFA8A8FD0AFFA8FD0CFFA8FD32FFA8FD27FFA8FD0CFFA8FD09FFA8
%A8FD0CFFA8FD27FFA8FD0AFFA8A8FD26FFA8A8FD0BFF84FD0AFFA8FD0BFF
%A8FD28FFA8FD0AFFA8FD28FFA8FD0CFFA8FD08FF7DFD0BFFA8A8FD28FFA8
%FD0AFFA8A8FD27FFA8A8FD0BFFA8A8FD06FFA8FD0CFFA8FD34FFA8FD29FF
%A8FD0BFFA8FD07FFA8A8FD0BFFA8FD29FFA8FD0AFFA8A8FD28FFA8A8FD0B
%FFA8FD06FFA8FD0BFFA8FD29FFA8FD0BFFA8FD2AFFA8FD0BFFA8FD05FFA8
%A8FD0AFFA8A8FD2AFFA8FD0AFFA8A8FD29FF84FD0BFFA8A8FD04FFAFFD0C
%FFA8FD35FFA8FD2BFFA8FD0BFFA8FD04FFA8FD0BFFA8FD2BFFA8FD0AFFA8
%A8FD2AFFA8FD0BFFA8A8FFFFFFA8FD0BFFA8FD2BFFA8FD0AFFA8FD2BFFA8
%FD0BFFA8FFFFFFA8A8FD0AFFA8A8FD0BFFA8FFA8FD05FFFD05A8FD13FFA8
%FD0AFFA8A8FD2BFFA8FD0BFFA8FFFFA8FD0BFFA8FD0BFF7DFFA8FFA8FD04
%FFA8FFFFFFA8A8FD1DFFA8FD17FFA8A8A8FD12FFA8FD0BFFA8FFFFA8FD0A
%FFA8A8FD0AFFA8FD05FF84FFFFFFA8FD04FFA8FD12FFA8FD0AFFA8A8FD13
%FFA8A8A8FFFD04A8FD10FFA8FD0BFFA8FFFFA8FD0BFFA8FD0AFFA8FD06FF
%A8FFA8FD05FFA8A8FD10FFA8FD0BFFA8FD13FFA8A8FD06FFA8A8A9FD0EFF
%AFFD0BFFA8FFA8A8FD0AFFA8FD05FFFD05A8A9A8FD07FF84A8A8FD05FFA8
%FD11FFA8FD0AFFA8A8FD11FFA8A8FD08FFA8A8A8FD0DFFA8A8FD0AFFA8FF
%FFA8FD0AFFA8FD04FFA8A8A8FFFFFFA8FD09FFA8FD07FFA8FD1BFFA8FD12
%FFA8FD0BFFA8A8FD0DFFA8FD0BFFA8A8FD0BFFA8FFFFFFA8A8FD17FFA8A8
%FD0FFFA8FD0AFFA8A8FD11FFA8FD0BFFA8A8FD0CFFA8A8FD0AFFA8A8AFFD
%0AFFA8FD04FFA8FD18FFA8FFFFFFA8A8A9FD0AFFA8FD0AFFA8FD11FFA8FD
%0DFFA8FD0DFFA8FD0BFFA8A8FD0BFFA8FFFFFFA8FD18FFA8A8FF7DFFA8A8
%A8FD09FFA8FD0AFFA8A8FD10FFA8FD0CFFA8FD0EFFA8A8FD0AFFA8FD0BFF
%A8FD05FFA8FD17FFA8FD05FFA8FD15FFA8FD0FFFA8A8A8FD1BFFA8FD0BFF
%A8A8FD0AFFA8A8FFFFFFA8A8FD18FF84A8A8FFFFFF7DFD09FFA8FD0AFFA8
%A8FD0DFFA8A8A8FD0DFFA8FD0FFFA8FD0AFFA8A8FD0AFFA8FD05FFA8FD19
%FFA8FD05FFA8FD07FFA8FD0BFFA8FD0EFFA8FD0FFFA8FD0FFFA8FD0AFFA8
%A8FD0AFFA8A8FD05FF7DA8FD1CFFA8A8FD08FFA8FD0AFFA8A8FD0DFFA8FD
%0FFF7DFD0FFFA8FD0AFFA8A8FD0AFFA8FD07FFA8FD1DFFA8FD13FFA8FD0E
%FFA8FD0FFFA8A8FD19FFA8A8FD0AFFA8A8FD05FFA8FD1EFFA8A8FFA8FFA8
%FFFFFFA8FD0AFFA8A8FD0DFFA8FD10FFA8A8FD0DFFA8FD0AFFA8A9FD0AFF
%A8FD06FFA8FD1EFFA8FFA8AFA8A8A8FFFFA8FD0AFFA8FD0DFFA8FD11FFA8
%FD0DFFA8FD0BFFA8A8FD0AFFA8A8FD05FFA8FD1FFF7DFD04FFA8FFFFA8FD
%0AFFA8A8FD0CFFA9A8FD0FFFA8A8FD0EFFA8FD0AFFA8FD0BFFA8FD05FFA8
%FD25FFA8FD0DFFA8FD0DFFA8FD10FFAFFD1AFFA8A8FD0AFFA8A8FD05FFA8
%FD25FFA8FFA8FD0AFFA8A8FD0DFFA8FD0FFF7EFD0FFFA8FD0AFFA8A8FD0A
%FFA8FD06FFAFA8FD24FFA8FD0CFFA8FD0DFFA8FD0FFFA8A9FD0FFFA8FD0A
%FFA8A8FD0AFFA8A8FD07FFFD05A8FD1FFFA8A9A8FD0AFFA8A8FD0DFFA8FD
%0EFFA8FD10FFA8FD0AFFA8A8FD17FF84A8FD1EFFA9A8FD0BFFA8FD1DFFA8
%FD0FFFA8FD0BFFA8A8FD0BFFA8FD0BFFA8FD1FFFA8A8A8FD0AFFA8A8FD0D
%FFA8FD0DFF7DFD10FFA8A8FD0AFFA8AFFD0AFFA8AFFD0AFFA8FD21FFA8FD
%0BFFA8FD0DFFA8FD0DFFA8FD11FFA8FD0BFFA8A8FD0BFFA8FD09FFA8FD0B
%FFA8FD16FFA8A8FD0AFFA8A8FD0DFFA8FD0BFF7DA8FD11FFA8A8FD09FFA8
%A8FD16FFAFFD0AFFA8FFA8FD15FFA8A8FD0AFFA8FD0DFFA8FD0BFFA8A9FD
%12FFA8FD0BFFA8A8FD0BFFA8FD09FFA8A8A8FD05FFA8A8A8FFFFA8A8FD15
%FFA8FD0AFFA8FFFFA8FFFD0AA8FD0AFFA8A8FD12FFA8A8FD0AFFA8FFFFA8
%FD0BFFA8FD09FFFD07A8FD04FFA8FD22FFFD05A8FFFFFFA8FFFFFFA8FD0B
%FFA8A8FD14FFA8FD0AFFA8FFA8A8FD0AFFA8A8FD0CFFA8FFA8FD04FFA8A8
%FD07FFA8A884FD09FFA8FD0FFFA8FD16FFA8A8FD13FF84FD0BFFA8FFFFA8
%FD0BFFA8FD13FFA8FD05FFA8A8A8FFFFA8FD08FFA8FFA8A8FD25FFAFA8A8
%A8FD10FFA8FD0BFFAFFFFFA8A8FD0AFFA8A8FD13FF7DFD05A8A9FFFFA8A8
%FD05FFA8A8A8FFFFFFA8A8A8FD25FFA8A8FD10FFA8FD0BFFA8FFFFA9A8FD
%0AFFA9A8FD14FFA8FD07FFA8A8FD04FFA8A8FD06FFA8A8FD14FFA8FFFFFF
%A8FD0CFFA8FD10FFA8FD0BFFA8FD04FFA8FD0BFFA8FD1DFF7EFD04A8FD06
%FFA87DFD11FFA8FFFD0DA8FFA8FD04FFA8A8FD0FFFA8A8FD0BFFA8A8FFFF
%FFA8FD0BFFA8A8FD25FFA8A8A8FD10FFA8A8AFA8FD0DFFA8A8A8AFA8FFA8
%FD11FFA8FD0BFFA8FD04FFA8FD0BFFA8A8FD23FFA87DFD13FFA8A8FD12FF
%A8FFA8FD11FFA8FD0BFFA8AFFD05FFA8FD0BFFA8FD21FFA8A8A8FD16FFA8
%A8FD24FFA8FD0BFFA8A8FD05FFA8A8FD0AFFA9A8FD1FFFA8A8A8FD17FFA8
%A8A8FD22FFA8A8FD0BFF84FD06FFA8FD0CFFA8FD1EFFA8FD1CFFA8A8FD21
%FFA8FD0BFFA8FD08FFA8FD0BFFA8A8FD1BFFA87EFD09FFA8A8A8FD12FFA8
%7DFD1FFFA8A9FD0BFFA8A9FD07FFA8FD0CFFA8FD1AFFA8A8FD09FFA8AFFF
%AFFD14FF7DFD1EFFA8FD0CFFA8FD08FFA8A8FD0BFFA8A8FD17FFA8A8A8FD
%08FFA87DFFFFFFA8FD0AFFA87DFD09FF7DFD1CFFA8A8FD0BFFA8FD0AFFA8
%FD0CFFA8FD17FFA8FD09FFA8A8FD0FFFA8FFA8A9FD08FFA8FD1BFFA8FD0C
%FFA8FD0BFFA8FD0BFFA8A8FD14FFA8A8FD08FFA8A8A8FD05FFA8FD0AFFA8
%A8FFA8A8FD08FFA8A8FD18FFA8FD0CFFA9A8FD0BFFA8FD0CFFA8FD14FFA8
%FD08FFA8A8FD06FFA8FD0BFFA8FFFFFFA8A8FD08FFA8A8FD17FFA8FD0CFF
%7DFD0CFFA8A8FD0CFF7DFD12FFA8A8FD07FFA8A8FD08FFA8FD0AFFA8A8FF
%FFFFA8A8FD08FFA8A8FD15FFA8A8FD0BFFA8A8FD0DFFA8FD0DFFA8FD10FF
%A8A8FD07FFA8A8FD14FFA8FD06FFA8FD08FFA8A8FD13FFAFA8FD0CFFA8FD
%0FFFA8FD0CFFA8A8FD0EFFA8A8FD07FFA8A8FD0AFFA8FD0AFFA8A8FD05FF
%A9A8A8FD07FFA8A8FD12FF7DFD0CFFA8A8FD0FFFA8FD0DFFA8FD0EFFA8FD
%07FFA8A8FD0BFFA8FD0AFFA8FD08FFA8A8FD07FFA8A8FD10FFA8FD0DFFA8
%FD10FFA8A8FD0CFFA8A8FD0CFF7EA8FD06FFA8A8FD0CFFA8FD0AFFA8A8FD
%08FFA8A8FD07FFA8A8FD0EFF7DFD0DFF84FD12FFA8FD0DFFA8A8FD0CFFA8
%A8FD04FFA8A8FD18FFA8FD0AFFA8A8FD07FFA8FD0DFFA8FD0DFFA8A8FD13
%FF7EFD0DFFA8A8FD0CFFA8A8FFFFFFA8A8FD0DFFA8FD0AFFA8A8FD0AFFA8
%A8FD07FF7DFD0BFFA8A8FD0DFFA8FD15FFA8FD0DFFA8A8FD0CFFFD04A8FD
%0EFFA8FD0BFFA8FD0CFFA8A8FD05FFA8A8FD0AFFA8A8FD0DFFA8A8FD15FF
%A8A8FD0DFF7DA8FD0CFFA87DA8FD0FFFA8FD0AFFA8A8FD0CFFA8A8FFFFFF
%84A8FD0AFFA8A8FD0EFF84FD17FFA8FD0EFFA8A8FD28FFA8FD0EFFAFA8FF
%A8A8FD0AFFA8A8FD0EFFA8FD18FFA8A8FD0EFFA8A8FD1CFFA8FD0AFFA8A8
%FD0EFFA87DFD0BFFA8A8FD0EFF7DFD1AFFA8A8FD0EFFA8A8FD1BFFA8FD0A
%FFA8FD1BFFA8A8FD0EFFA8FD1CFFA8A8FD0EFFA8A8A8FD19FFA8FD0AFFA8
%A8FD19FF7DFD0FFFA8A8FD1DFFA8FD10FFA8A8FD23FFA8FD19FF84FD0FFF
%A8A8FD1FFF7DFD10FFA8A8FD17FFA8FD0AFFA8A8FD15FFA8A8A8FD0FFFA8
%A8FD21FF7DFD11FFA8FD15FFA8FD0BFFA8FD15FFA8A8A8FD0FFFA8A8FD23
%FF7DFD11FFA8A8A8FD13FFA8FD0AFFA8A8FD13FF7DA8FD10FFA8A8A8FD24
%FFA8FD11FFA9A8A8FD12FFA8FFFFA8FFA8FFA8FFA8FFA8FD12FFA8A8FD12
%FFA8FD27FF7DFD13FFA8A8A8FD0FFFA8FFA8FFA8FFA8FFA8FFA8FD11FFA8
%A8A8FD11FFA8A8A8FD28FFA8FD13FFA8A8A8FD27FFA8A8A8FD13FFA8A8FD
%2BFF7DA8FD14FFA8A8A8FD21FFA8A884A8A8FD13FFA8A8FD2DFFA8A8FD16
%FFA8A8A8FD1DFFA8A8A8FD15FFA8FD30FFA8A8A8FD15FFA8FFFD05A8FFA8
%FD0FFFA8FFFD05A8FD17FF7DA8FD32FFA8A8FD19FFA8FFA8A8A8AFA8A8A8
%FFA8A8A8FFA8A8A8A9A8A8A8FD1AFFAF7DFD35FFA884FD1DFFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FD1BFFA8A8A8FD38FFA8FD43FFA8A8FD3BFFA8A8A8FD
%3FFF84A8FD3EFFA8A8FD3CFFA8A8FD42FF7DA8A8FD37FFA8A8A8FD44FFA8
%A8A8FD34FFA8A8FD4AFFA8A8A8FD2EFFA87DA8A8FD4DFFA8A8A8A9FD29FF
%A8A8A8FD52FFFD05A8FD21FFA8FF84A8A8FD58FFA8FFA8A8A8FD1BFFA8FF
%A8A8A8FD5EFFA8FFFD05A8FFA8FFA8FD09FFA8FFA8FFFD07A8FD68FFA8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FD78FFA8FD3EFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Nachzeichnen) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe H\374llen-Zusatzmodul) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe-Zusatzmodul Interaktiv malen) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Angleichungen-Zusatzmodul) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Kalligrafiepinsel-Zusatzmodul) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Zusammengesetzte Form) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Passermarken]) 0 Xs
([Passermarken])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Ebene 1) Ln
0 A
u
0 R
0 0 0 1 K
0 J 0 j 1 w 4 M []0 d0 XR
-5.05518 222.769 m
-20.3882 222.769 -35.7212 222.769 -51.0552 222.769 C
-51.0552 219.5068 -51.0552 216.2461 -51.0552 212.9839 C
-35.7212 212.9839 -20.3882 212.9839 -5.05518 212.9839 C
-5.05518 216.2461 -5.05518 219.5068 -5.05518 222.769 C
s
-68.9458 103.1367 m
-41.6851 103.1367 -14.4248 103.1367 12.8359 103.1367 C
-0.793945 117.8457 -14.4248 132.5562 -28.0552 147.2651 C
-41.6851 132.5562 -55.3149 117.8457 -68.9458 103.1367 C
s
12.8359 212.8569 m
-14.4238 212.8569 -41.6851 212.8569 -68.9448 212.8569 C
-55.3149 198.1479 -41.6851 183.438 -28.0552 168.729 C
-14.4248 183.438 -0.793945 198.1479 12.8359 212.8569 C
s
23.6909 116.1553 m
46.0918 122.8213 68.4922 129.4873 90.8931 136.1543 C
90.8931 150.5 90.8931 164.8467 90.8931 179.1943 C
68.4922 185.8604 46.0918 192.5273 23.6909 199.1943 C
9.85205 185.354 -3.98779 171.5142 -17.8281 157.6738 C
-3.98779 143.834 9.85205 129.9951 23.6909 116.1553 C
s
147.3071 155.373 m
115.4883 123.5527 L
152.2231 86.8169 174.9448 36.0669 174.9448 -19.9902 C
174.9448 -132.1021 84.0591 -222.9888 -28.0552 -222.9888 C
-140.168 -222.9888 -231.0552 -132.1021 -231.0552 -19.9902 C
-231.0552 36.0669 -208.333 86.8169 -171.5981 123.5518 C
-203.418 155.3721 L
-248.2969 110.4932 -276.0552 48.4941 -276.0552 -19.9902 C
-276.0552 -156.9561 -165.022 -267.9888 -28.0552 -267.9888 C
108.9121 -267.9888 219.9448 -156.9561 219.9448 -19.9902 C
219.9448 48.4941 192.1851 110.4941 147.3071 155.373 C
s
-38.2808 157.6738 m
-52.1211 171.5142 -65.9609 185.354 -79.8008 199.1943 C
-98.8691 199.1943 -117.936 199.1943 -137.0039 199.1943 C
-137.0039 171.5127 -137.0039 143.833 -137.0039 116.1533 C
-117.936 116.1533 -98.8691 116.1533 -79.8008 116.1533 C
-65.9609 129.9932 -52.1211 143.834 -38.2808 157.6738 C
s
-56.749 -74.458 m
-58.9219 -73.3203 -61.4478 -71.8623 -63.4521 -71.2197 C
-64.0469 -71.8828 -65.2651 -72.0703 -65.9951 -72.3711 C
-66.3589 -72.7217 -80.5459 -80.2402 -80.9102 -80.5908 C
-81.4131 -80.689 -89.187 -85.0161 -89.6899 -85.1143 C
-90.7319 -85.3809 -91.8872 -85.8608 -92.9292 -86.127 C
-93.6138 -86.4009 -94.7422 -86.6338 -95.4268 -86.9082 C
-96.1719 -86.6079 -100.6118 -86.4849 -101.3569 -86.1841 C
-101.853 -85.9248 -102.3501 -85.665 -102.8462 -85.4053 C
-103.3418 -85.146 -103.9121 -84.542 -104.4082 -84.2822 C
-105.4541 -82.9697 -106.6738 -79.3066 -106.4028 -77.583 C
-106.0688 -76.9453 -105.6162 -75.6919 -105.2822 -75.0537 C
-104.2451 -73.0679 -103.5771 -71.8579 -103.582 -70.2549 C
-103.5859 -69.2681 -103.418 -68.9043 -104.4028 -68.2002 C
-105.4448 -68.4668 -107.0049 -69.0732 -108.0469 -69.3398 C
-108.7661 -69.5049 -125.6509 -77.3931 -126.3701 -77.5591 C
-127.1572 -77.9492 -127.313 -78.3931 -128.313 -78.166 C
-129.0107 -78.936 -130.25 -78.8179 -131.0762 -79.0293 C
-131.8921 -78.6919 -139.478 -79.1387 -140.2949 -78.8008 C
-141.2739 -78.5869 -142.2778 -77.5898 -142.6792 -77.147 C
-143.0669 -76.853 -143.5298 -76.3301 -143.918 -76.0371 C
-144.0469 -75.2471 -145.4722 -72.3091 -145.6001 -71.52 C
-145.0811 -70.5283 -144.228 -68.042 -143.708 -67.0498 C
-143.2329 -66.4863 -140.957 -64.5601 -140.4819 -63.9961 C
-139.7578 -63.4111 -137.062 -60.373 -136.4971 -59.3877 C
-136.7231 -58.6289 -137.9521 -57.6499 -138.978 -57.1411 C
-139.7412 -57.439 -141.1538 -57.2891 -141.9878 -57.394 C
-142.5991 -57.5249 -144.3999 -58.1851 -145.0107 -58.3169 C
-145.5142 -58.415 -146.4438 -58.98 -146.9468 -59.0781 C
-148.7451 -59.5811 -162.3652 -65.937 -164.1641 -66.4399 C
-164.6328 -66.646 -165.7441 -66.6963 -166.2129 -66.9023 C
-166.7119 -66.8213 -171.8281 -67.3008 -172.3271 -67.2197 C
-172.8262 -67.1387 -174.3599 -67.2871 -174.8599 -67.2061 C
-175.3218 -67.0537 -176.082 -67.062 -176.5449 -66.9102 C
-178.5898 -66.6611 -185.1748 -64.9658 -187.0752 -63.1133 C
-187.7461 -62.6709 -188.644 -61.6309 -189.3159 -61.189 C
-188.6108 -59.8418 -189.5132 -53.7998 -188.8081 -52.4531 C
-188.1382 -52.1929 -187.7212 -51.1738 -187.1289 -50.627 C
-186.8359 -50.2393 -183.689 -47.501 -183.396 -47.1133 C
-182.0278 -45.9399 -179.8198 -43.811 -179.1621 -41.791 C
-180.5479 -40.7109 -181.8682 -40.4072 -183.48 -40.207 C
-184.0132 -40.019 -184.9819 -39.9849 -185.5151 -39.7959 C
-186.5479 -39.5259 -190.8452 -38.9248 -191.8779 -38.6553 C
-196.2188 -38.0332 -203.8481 -35.3379 -207.0068 -31.5601 C
-206.7739 -30.23 -206.6841 -19.4629 -206.0952 -18.8848 C
-204.2988 -17.2251 -201.7568 -13.9883 -200.7979 -10.9839 C
-201.186 -10.6909 -202.981 -7.60205 -203.3691 -7.30908 C
-204.2158 -6.68506 -205.0981 -5.73828 -205.9448 -5.11426 C
-206.4038 -4.7832 -207.3721 -3.53711 -207.8311 -3.20703 C
-208.4082 -1.5498 -211.4321 4.02393 -212.0098 5.68115 C
-211.9292 6.17969 -212.2808 7.92188 -212.2002 8.42188 C
-212.0479 8.88379 -212.1309 9.74023 -211.979 10.2021 C
-211.8809 11.0869 -210.291 15.7871 -209.3062 16.7949 C
-208.9761 17.2539 -208.312 17.7422 -207.9819 18.2012 C
-206.2168 18.812 -200.7529 21.8047 -198.9878 22.416 C
-198.5259 22.2651 -194.1401 22.478 -193.6768 22.3271 C
-191.6118 21.7871 -189.019 21.479 -186.9541 20.9399 C
-186.4541 20.8589 -185.7368 20.9351 -185.2378 20.854 C
-184.5527 21.127 -183.4932 21.3398 -182.8081 21.6143 C
-181.854 23.4761 -181.498 24.7681 -181.2578 26.2881 C
-181.106 26.75 -180.875 28.5771 -180.7241 29.0391 C
-180.4639 29.5352 -180.0781 31.7432 -179.8179 32.2393 C
-179.3882 34.2598 -175.6792 36.73 -174.665 37.2729 C
-173.4849 37.041 -162.2842 34.7119 -161.6421 34.1001 C
-160.7568 33.5469 -159.6641 32.7041 -158.7798 32.1499 C
-158.3208 31.8203 -151.9619 25.4658 -151.5029 25.1348 C
-150.1348 23.4434 -148.958 21.7891 -146.3218 20.9321 C
-144.4932 23.312 -144.417 26.4648 -144.1631 28.8501 C
-143.9399 29.2749 -142.9482 34.8779 -142.7251 35.3027 C
-142.4189 36.77 -140.4658 38.8467 -139.8042 39.395 C
-136.5181 39.771 -129.6611 38.5381 -126.937 35.7061 C
-126.3027 35.1934 -125.5298 34.4258 -124.895 33.9131 C
-124.7642 33.3027 -116.9331 21.5283 -116.8008 20.917 C
-116.6348 20.1992 -116.105 18.8818 -115.9399 18.1641 C
-115.7339 17.6953 -115.501 15.9321 -115.2949 15.4629 C
-115.0889 14.9941 -113.5918 3.07324 -113.3857 2.604 C
-113.0449 1.70313 -112.644 0.397949 -112.3027 -0.50293 C
-111.77 -0.690918 -110.3281 -1.08496 -109.7949 -1.27393 C
-108.9438 -1.71875 -107.4619 -2.12305 -106.6118 -2.56787 C
-106.3262 -1.854 -106.2031 -0.954102 -106.1641 -0.268066 C
-105.645 0.724121 -104.0391 8.66211 -103.519 9.6543 C
-102.8931 9.57422 -94.021 10.4961 -93.2451 9.75684 C
-92.9111 8.49805 -87.6909 0.799805 -87.3569 -0.458984 C
-86.9819 -1.46777 -86.668 -2.85107 -86.293 -3.85986 C
-86.0527 -4.43701 -85.9858 -5.60107 -85.7461 -6.17773 C
-85.54 -6.64697 -85.4478 -7.88867 -85.2422 -8.35791 C
-85.0029 -8.93506 -83.665 -18.9229 -83.4248 -19.5 C
-83.1182 -20.292 -82.4331 -24.2129 -82.126 -25.0049 C
-81.6699 -24.4482 -80.6357 -24.499 -80.0679 -24.0508 C
-79.3301 -22.812 -78.3779 -21.6851 -77.6392 -20.4463 C
-77.3462 -20.0581 -76.5972 -19.5361 -76.3042 -19.1479 C
-75.71 -19.1851 -65.9268 -17.2363 -65.2988 -17.832 C
-64.874 -18.0547 -64.3701 -18.6348 -63.9448 -18.8579 C
-63.8472 -19.3613 -60.875 -23.8281 -60.7769 -24.3311 C
-60.4697 -25.124 -60.1528 -26.8027 -59.8447 -27.5947 C
-59.606 -28.1719 -59.499 -29.7471 -59.2588 -30.3252 C
-57.3462 -31.3262 -52.6001 -61.043 -50.687 -62.0449 C
-50.8091 -58.1519 -50.9321 22.4287 -51.0552 103.0098 C
-35.7212 103.0098 -20.3882 103.0098 -5.05518 103.0098 C
-5.05518 18.0571 -5.05518 -66.895 Y
22.6089 -61.2822 41.2632 -63.71 45.9448 -61.9893 C
53.084 -59.3652 49.688 -50.248 49.688 -36.8311 C
49.688 -23.4141 49.1631 -11.229 52.3242 -1.47412 C
55.4849 8.28223 59.897 -1.89404 61.4448 3.75879 C
64.416 14.606 75.0898 41.8818 95.0669 31.936 C
96.6372 31.1543 100.0449 33.7441 101.332 33.0117 C
102.8633 32.1431 102.2168 27.96 103.3848 27.123 C
104.4092 26.3887 117.6318 24.4419 115.752 13.522 C
113.9829 3.24316 112.1992 -1.13574 112.1992 -8.56104 C
112.1992 -13.2383 118.9043 -7.52393 117.8999 -14.167 C
116.373 -24.2759 111.7939 -37.0127 107.271 -43.3838 C
103.5142 -48.6768 103.6328 -50.584 95.4692 -58.749 C
79.563 -74.6563 88.4448 -72.9893 91.9448 -72.9893 C
95.4448 -72.9893 99.0698 -74.1143 102.6948 -75.2393 C
99.2793 -80.9893 95.8618 -86.7388 92.4448 -92.4888 C
70.9141 -87.1079 49.3828 -81.7261 31.8828 -84.7236 C
24.3569 -86.0132 14.3911 -87.9399 4.39307 -90.0322 C
27.4189 -109.0107 50.4448 -127.9888 V
59.2769 -137.1558 68.1079 -146.3232 76.9399 -155.4888 C
71.0249 -161.0732 65.1099 -166.6558 59.1948 -172.2388 C
41.5278 -155.7461 23.8608 -139.2539 6.19287 -122.7607 C
3.96289 -121.1509 1.73193 -119.542 -5.05518 -114.6748 C
-5.05518 -157.332 -5.05518 -199.9888 V
-20.3882 -199.9888 -35.7212 -199.9888 -51.0552 -199.9888 C
-51.0552 -153.6748 -51.0552 -107.3599 Y
-84.1357 -126.5322 -99.4697 -145.1357 -114.8052 -163.7388 C
-121.2212 -158.3232 -127.6382 -152.9058 -134.0552 -147.4888 C
-121.2671 -128.7681 -108.479 -110.0479 -55.3042 -84.1299 C
-53.874 -83.4331 -52.4619 -82.7729 -51.0542 -82.1221 C
-51.0542 -82.0146 L
-49.4082 -81.3511 -53.2061 -76.313 -56.749 -74.458 C
s
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
